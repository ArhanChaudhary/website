---
import type { MDXInstance } from "astro";
import Layout from "../../layouts/Layout.astro";
import Writeup from "../../components/Writeup.astro";

export interface WriteupFrontmatter {
  description: string;
  category:
    | "Web Exploitation"
    | "Reverse Engineering"
    | "Forensics"
    | "General Skills"
    | "Binary Exploitation";
  points: number;
  attachments?: string[];
  links?: { name: string; url: string }[];
}

export async function getStaticPaths() {
  function urlToCTFName(url: string) {
    return url.split("/").at(-2)!;
  }

  const allWriteups = (await Astro.glob<WriteupFrontmatter>(
    "../write-up/**/!(_).mdx"
  )) as MDXInstance<Record<string, any>>[];

  const CTFWriteupNames = [
    ...new Set(
      allWriteups.map((writeup) => urlToCTFName(writeup.url as string))
    ),
  ];

  return CTFWriteupNames.map((CTFName) => {
    const sluggifiedCTFName = CTFName.toLowerCase().replaceAll(" ", "-");
    const iteratorCTFWriteups = allWriteups.filter(
      (writeup) =>
        urlToCTFName(writeup.url as string)
          .toLowerCase()
          .replaceAll(" ", "-") === sluggifiedCTFName
    );
    return {
      params: {
        ctf: sluggifiedCTFName,
      },
      props: {
        writeups: iteratorCTFWriteups,
        ctfName: CTFName,
      },
    };
  });
}

const { writeups, ctfName } = Astro.props;
const categorySorting = [
  "General Skills",
  "Forensics",
  "Web Exploitation",
  "Reverse Engineering",
  "Binary Exploitation",
];
for (const writeup of writeups) {
  if (!categorySorting.includes(writeup.frontmatter.category)) {
    throw new Error("Invalid writeup category");
  }
}
writeups.sort((a, b) => {
  const firstIndex = categorySorting.indexOf(a.frontmatter.category);
  const secondIndex = categorySorting.indexOf(b.frontmatter.category);
  if (firstIndex === secondIndex) {
    return b.frontmatter.points - a.frontmatter.points;
  } else {
    return firstIndex - secondIndex;
  }
});
---

<Layout title={ctfName} sshUser="ctf" highlightIndex={4}>
  <div class="system-ui" id="max-width-wrapper">
    <h1>{ctfName}</h1>
    <ul>
      {
        writeups.map((writeup, i) => (
          <>
            {writeups[i - 1]?.frontmatter.category !==
              writeup.frontmatter.category && (
              <li class="category-toc">{writeup.frontmatter.category}</li>
            )}
            <li class="writeup-toc">
              <a
                href={`#${writeup.file
                  .split("/")
                  .at(-1)!
                  .replace(".mdx", "")
                  .toLowerCase()
                  .replaceAll(" ", "-")}`}
              >
                {writeup.file.split("/").at(-1)!.replace(".mdx", "")}
              </a>
            </li>
          </>
        ))
      }
    </ul>
    {
      writeups.map((writeup, i) => (
        <Writeup
          {writeup}
          {ctfName}
          prevCategory={writeups[i - 1]?.frontmatter.category}
        />
      ))
    }
  </div>
</Layout>

<style lang="scss">
  .category-toc {
    margin-top: 1em;
  }

  .writeup-toc {
    list-style-type: circle;
    list-style-position: inside;
    padding-left: 40px;
  }
</style>
