---
import {
  decodeFileName,
  decodeFilePath1,
  decodeFilePath2,
  mySlugify,
} from "../../lib/utils";
import Layout from "../../layouts/Layout.astro";
import Writeup from "../../components/Writeup.astro";
import { getCollection } from "astro:content";
import { writeupCategory } from "../../content.config.ts";

// cspell:disable

export async function getStaticPaths() {
  const allWriteups = await getCollection("ctf-write-up");
  const ctfWriteupNames = [
    ...new Set(
      allWriteups.map((writeup) => {
        const ret = decodeFilePath2(writeup.filePath);
        if (!ret) throw new Error("ctf name not found");
        return ret;
      })
    ),
  ];
  return ctfWriteupNames.map((ctfName) => {
    const iteratorCtfWriteups = allWriteups.filter(
      (writeup) => decodeFilePath2(writeup.filePath) === ctfName
    );
    return {
      params: {
        slug: mySlugify(decodeFileName(ctfName, false)),
      },
      props: {
        writeups: iteratorCtfWriteups,
        ctfName,
      },
    };
  });
}

const { writeups, ctfName } = Astro.props;
writeups.sort((a, b) => {
  const firstIndex = writeupCategory.indexOf(a.data.category);
  const secondIndex = writeupCategory.indexOf(b.data.category);
  if (firstIndex === secondIndex) {
    return b.data.points - a.data.points;
  }
  return firstIndex - secondIndex;
});
// cspell:enable
// cspell:ignore writeups
---

<Layout title={ctfName + " Write-up"} sshUser="ctf">
  <div class="system-ui" id="max-width-wrapper">
    <h1>{ctfName}</h1>
    <ul>
      {
        writeups.map((writeup, i) => (
          <>
            {writeups[i - 1]?.data.category !== writeup.data.category && (
              <li class="category-toc">{writeup.data.category}</li>
            )}
            <li class="writeup-toc">
              <a href={`#${mySlugify(decodeFilePath1(writeup.filePath))}`}>
                {decodeFilePath1(writeup.filePath)}
              </a>
            </li>
          </>
        ))
      }
    </ul>
    {
      writeups.map((writeup, i) => (
        <Writeup {writeup} prevCategory={writeups[i - 1]?.data.category} />
      ))
    }
  </div>
</Layout>

<style lang="scss">
  .category-toc {
    margin-top: 1em;
  }

  .writeup-toc {
    list-style-type: circle;
    list-style-position: inside;
    padding-left: 40px;
  }
</style>
