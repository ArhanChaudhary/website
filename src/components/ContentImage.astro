---
import { Image } from "astro:assets";

interface Props {
  src: ImageMetadata;
  alt: string;
  desc?: string;
  width?: number;
  height?: number;
  visualWidth?: number;
  // biome-ignore lint/suspicious/noExplicitAny: <explanation>
  [key: string]: any;
}

const { src, alt, desc, visualWidth, height, ...attrs } = Astro.props;
if ("style" in attrs) {
  throw new Error("style is not allowed in ContentImage");
}
let { width } = Astro.props;

if (width === undefined) {
  if (height === undefined) {
    width = src.width;
  } else {
    width = (src.width / src.height) * height;
  }
}
---

<div class="content-image-positioner">
  <span class="content-image-wrapper">
    <Image
      {src}
      {alt}
      {...attrs}
      style={visualWidth === undefined
        ? undefined
        : `max-width: min(100%, ${visualWidth}px);`}
      {width}
    />
    {
      desc && (
        <div
          class="content-image-alt-text"
          set:html={desc}
          style={`max-width: ${visualWidth === undefined ? width : visualWidth}px`}
        />
      )
    }
  </span>
</div>

<style lang="scss">
  .content-image-positioner {
    .content-image-wrapper {
      img {
        cursor: zoom-in;
        margin: 0 auto;
        max-width: 100%;
        height: auto;
        display: block;
      }

      .content-image-alt-text {
        margin: 3px auto 1em auto;
        font-style: italic;
        color: hsl(0deg 0% 70%);
      }
    }
  }
</style>
