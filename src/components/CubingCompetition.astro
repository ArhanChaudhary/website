---
import type { CollectionEntry } from "astro:content";
import slugify from "slugify";
import { decodeFileName } from "../assets/utils";

interface Props {
  cubingCompetition: CollectionEntry<"cubing-competition">;
}

const { cubingCompetition } = Astro.props;
const { Content } = await cubingCompetition.render();

function bestSingle(times: (number | "DNF")[]): string {
  const ret = times.reduce((best, time) => {
    if (time === "DNF") {
      return best;
    }
    if (best === "DNF") {
      return time;
    }
    return Math.min(best, time);
  });
  return ret === "DNF" ? "DNF" : ret.toFixed(2);
}

function averageOf5(times: (number | "DNF")[]): string {
  const sortedTimes = times
    .sort((a, b) => {
      if (a === "DNF") {
        return 1;
      }
      if (b === "DNF") {
        return -1;
      }
      return a - b;
    })
    .slice(1, -1);
  if (sortedTimes.includes("DNF")) {
    return "DNF";
  }
  return (
    sortedTimes.reduce((sum: number, time) => sum + (time as number), 0) / 3
  ).toFixed(2);
}
---

<h3>
  <a
    href={"https://www.worldcubeassociation.org/competitions/" +
      (cubingCompetition.data.slugOverride ||
        slugify(decodeFileName(cubingCompetition.id), {
          replacement: "",
          remove: /[^a-zA-Z\d]/g,
        }))}>{decodeFileName(cubingCompetition.id)}</a
  >
</h3>
<p class="competition-date">
  <i class="white">
    Competition date: {
      cubingCompetition.data.date.toLocaleDateString("en-US", {
        month: "short",
        day: "numeric",
        year: "numeric",
      })
    }
  </i>
</p>
{
  cubingCompetition.data.results.length !== 0 && (
    <div class="results">
      <span>Round</span>
      <span>Place</span>
      <span class="break-word">Best Single</span>
      <span class="break-word">Average of 5</span>
      {cubingCompetition.data.results.map((result) => (
        <>
          <span>{result.round}</span>
          <span>{result.place}</span>
          <span>{bestSingle(result.times)}</span>
          <span>{averageOf5(result.times)}</span>
        </>
      ))}
    </div>
  )
}
<Content />
<div class="bottom-margin"></div>

<style lang="scss">
  h3 {
    margin-top: 0;
    margin-bottom: 0;
  }

  .competition-date {
    margin-top: 0.5em;
  }

  .bottom-margin {
    height: 2em;
  }

  .results {
    background-color: var(--offwhite);
    display: inline-grid;
    grid-template-columns: repeat(4, minmax(0, 1fr));
    gap: 1.5px;
    padding: 1.5px;

    span {
      padding: 5px 8px;
      background-color: var(--background);
    }
  }
</style>
