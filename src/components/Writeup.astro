---
import { render, type CollectionEntry } from "astro:content";
import { decodeFilePath1, decodeFilePath2, mySlugify } from "../lib/utils";

interface Props {
  writeup: CollectionEntry<"ctf-write-up">;
  prevCategory: string | undefined;
}

const { writeup, prevCategory } = Astro.props;
const { Content } = await render(writeup);
---

{
  prevCategory !== writeup.data.category && (
    <div class="category-wrapper">
      <hr />
      <h2 id={mySlugify(writeup.data.category)}>{writeup.data.category}</h2>
      <hr />
    </div>
  )
}
<h3 id={mySlugify(decodeFilePath1(writeup.filePath))}>
  {decodeFilePath1(writeup.filePath)} â€”
  {writeup.data.points} points
</h3>
<blockquote>{writeup.data.description}</blockquote>
<p>
  {
    writeup.data.links && (
      <>
        <i>
          Links:
          {writeup.data.links.map((link, i) => (
            <>
              <a href={link.url}>{link.name}</a>
              {writeup.data.links!.length > 2 &&
                i !== writeup.data.links!.length - 1 && <>,&nbsp;</>}
              {i === writeup.data.links!.length - 2 && <>and</>}
            </>
          ))}
        </i>
        <br />
      </>
    )
  }
  {
    writeup.data.attachments && (
      <i>
        Attachments:
        {writeup.data.attachments.map((attachment, i) => (
          <>
            <a
              class="attachment-link"
              href={`/write-up/${decodeFilePath2(writeup.filePath)}/${decodeFilePath1(writeup.filePath)}/${attachment}`}
            >
              {attachment}
            </a>
            {writeup.data.attachments!.length > 2 &&
              i !== writeup.data.attachments!.length - 1 && <>,&nbsp;</>}
            {i === writeup.data.attachments!.length - 2 && <>and</>}
          </>
        ))}
      </i>
    )
  }
</p>
<span class="offwhite">
  <Content />
</span>

<style lang="scss">
  .attachment-link {
    display: inline-block;
  }

  blockquote {
    margin: -5px 0 -10px;
  }

  .category-wrapper {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: -25px;

    &:not(:first-of-type) {
      margin-top: 50px;
    }

    h2 {
      margin: 0;
    }

    hr:first-of-type {
      width: 25px;
    }

    hr:last-of-type {
      flex-grow: 1;
    }
  }

  h3 {
    margin-top: calc(1em + 25px);
  }
</style>
